/*
Global Data Layer
Prioritization: HRST Object > Meta Tags > Omni Object > Content Scraping
*/

// Set Global Variables
window.dHash = new Date().getTime();
var Bootstrapper = window["Bootstrapper"];
var ensightenOptions = Bootstrapper.ensightenOptions;

// Fire Data Layer
Bootstrapper.dataManager.push({
  name: "Ensighten Global Data Layer",
  id: "ensGlobal-2015",
  data: {
    kfullUrl: {
      get: function() {
        return window.location.href.substring(0, 255) || 'Element-Not-Available';
      }
    },
    kcanonical: {
      get: function() {
        var c = jQuery('link[rel="canonical"]').attr('href');
        if (typeof(c) != "undefined") {
          return c;
        } else {
          return "Element-Not-Available";
        }
      }
    },
    kimageUrl: {
      get: function() {
        var c = jQuery('meta[property="og:image"]').attr('content');
        if (typeof(c) != "undefined") {
          return c;
        } else if (typeof(globaljsobject) != "undefined" && window.globaljsobject.img_small) {
          return window.globaljsobject.img_small;
        } else {
          return "Element-Not-Available";
        }
      }
    },
    karticleAuthor: {
      get: function() {
        var a = (typeof(window.HRST) != "undefined" && typeof(window.HRST.article) != "undefined" ? window.HRST.article.author.name : "") || jQuery('meta[property="author"]').attr('content') || window.awOmniAuthor || window.abOmniAuthor;
        var b = $('div.author').text();
        if (!a && !b) {
          if (document.querySelectorAll('.byline-container .byline a').length > 0) {
            a = document.querySelectorAll('.byline-container .byline a')[0].innerHTML.replace('BY', '').trimLeft();
          } else if (document.querySelectorAll('.post-credits a').length > 0) {
            a = document.querySelectorAll('.post-credits a')[0].innerHTML.trimLeft();
          } else {}
        }
        if (!a) {
          var c = $('div.author').text();
          if (typeof(c) != "undefined") {
            c = c.replace(/\s{2,}/g, "").replace(/By/, "");
            if (c.match(/,/)) {
              a = c.replace(/\,.*/, '');
            }
          } else {}
        }
        try {
          if (typeof(Bootstrapper.authorparse) == "function") {
            a = Bootstrapper.authorparse(a);
          }
        } catch (err) {}
        return a || "Element-Not-Available";
      }
    },
    ktitle: {
      get: function() {
        var a = (typeof(window.HRST) != "undefined" && typeof(window.HRST.article) != "undefined" ? window.HRST.article.title : "") || jQuery('meta[property="og:title"]').attr('content') || window.omni_omni_title || window.omni_blogposttitle
        if (!a) {
          try {
            if (typeof(window["www-globaljsobject"]) != "undefined") {
              a = window["www-globaljsobject"].title;
            } else if (typeof(window["blog-hfm"]) != "undefined") {
              a = window["blog-hfm"].cd.page.title;
            }
          } catch (err) {}
        }
        return a || 'Element-Not-Available';
      }
    },
    ksection: {
      get: function() {
        var a = (typeof(window.HRST) != "undefined" && typeof(window.HRST.article) != "undefined" ? window.HRST.article.section.name : "") || jQuery('meta[property="og:article:section"]').attr('content') || jQuery('meta[name="section"]').attr('content') || window.omni_channelPath || window.omni_blogcategory || (typeof(globaljsobject) != "undefined" ? window.globaljsobject.article_category : "") || (typeof(globaljsobject) != "undefined" ? window.globaljsobject.blog_category : "");
        if (!a || !a == '') {
          try {
            x = $.parseJSON($('meta[name="ib-analytics"]').attr('data-context'));
            a = x.channels.toString();
          } catch (err) {}
        }
        return a || 'Element-Not-Available';
      }
    },
    ksubSection: {
      get: function() {
        var a = (typeof(window.HRST) != "undefined" && typeof(window.HRST.article) != "undefined" ? window.HRST.article.subSection.name : "") || window.omni_channelPath || window.omni_blogcategory2 || (typeof(globaljsobject) != "undefined" ? window.globaljsobject.article_subcategory : "") || 'Element-Not-Available';
        return a;
      }
    },
    karticleId: {
      get: function() {
        var a = (typeof(window.HRST) != "undefined" && typeof(window.HRST.article) != "undefined" ? window.HRST.article.id : "") || window.omni_bizObjectId || window.omni_blogpageID || (typeof(globaljsobject) != "undefined" ? window.globaljsobject.id : "") || (typeof(hfm) != "undefined" ? window.hfm.cd.page.id : "");
        if (!a) {
          c = $('meta[name="ib-analytics"]').attr('data-content');
          if (typeof(c) != "undefined") {
            var ibAnalyticsData = $.parseJSON($('meta[name="ib-analytics"]').attr('data-content'));
            a = ibAnalyticsData.contentId || 'Element-Not-Available';
          }
        }
        try {
          if (typeof(Bootstrapper.artidclean) == "function") {
            a = Bootstrapper.artidclean(a);
          }
        } catch (err) {}
        return a;
      }
    },
    /*description: {
      get: function() {
        var a = jQuery('meta[property="og:description"]').attr('content') || 'Element-Not-Available';
        return a;
      }
    },*/
    kpublishDate: {
      get: function() {
        var a = (typeof(window.HRST) != "undefined" && typeof(window.HRST.article) != "undefined" ? (window.HRST.article.publishDate.year + '-' + window.HRST.article.publishDate.month + '-' + window.HRST.article.publishDate.day + ' ' + window.HRST.article.publishDate.hour + ':' + window.HRST.article.publishDate.minute) : "") || jQuery('meta[property="og:article:published_time"]').attr('content') || (typeof(window.awOmniPubDate) != "undefined" ? window.awOmniPubDate : "") || (typeof(window.pageSectionArray) != "undefined" ? (window.pageSectionArray[2] + '-' + window.pageSectionArray[3] + '-' + window.pageSectionArray[4]) : "") || (typeof(window.hfm) != "undefined" && typeof(window.hfm.cd) != "undefined" && typeof(window.hfm.cd.page) != "undefined" ? window.hfm.cd.page.publish_date : "");
        var b = $("div.detailTimestamp span.date").text().match('Updated On:');
        var c = $("div.detailTimestamp span.date").text();
        if (!a && !b) {
          a = $("div.detailTimestamp span.date").text();
          if (a !== "") {
            var ensDate9 = Bootstrapper.ensFormatHearstDate(Bootstrapper.ensParseHearstDate(a.replace("UPDATED", "").replace("Published", "")));
            if (ensDate9.indexOf("NaN") != -1) {
              a = "Element-Not-Available";
            } else {
              a = ensDate9;
            }
          }
        }
        if (b) {
          var metaUpdate = $("div.detailTimestamp span.date").text(),
            a;
          var ensDate = metaUpdate.replace(/(.*)Updated\sOn:\s/, "");
          var ensDate3 = ensDate.replace(/^[a-zA-Z]{3,4}\s[0-9]{1,2}\s[0-9]{4}\s/, "");
          var ensDate6 = ensDate.match(/^[a-zA-Z]{3,4}\s[0-9]{1,2}\s/);
          var ensDate7 = ensDate.match(/[0-9]{4}\s/)
          var ensDate8 = ensDate3 + ' ' + ensDate6 + ',' + ensDate7;
          var ensDate9 = Bootstrapper.ensFormatHearstDate(Bootstrapper.ensParseHearstDate(ensDate8));
          if (ensDate9.indexOf("NaN") != -1) {
            a = "Element-Not-Available";
          } else {
            a = ensDate9;
          }
        }
        if (document.location.host == 'www.caranddriver.com' && a) {
          a = a.split(' ');
          b = a[0];
          c = a[1];
          function getMonthFromString(mon) {
            return new Date(Date.parse(mon + " 1, 2012")).getMonth() + 1;
          }
          if (getMonthFromString(b) < 10) {
            a = c + '-0' + getMonthFromString(b) + '-01';
          } else {
            a = c + '-' + getMonthFromString(b) + '-01';
          }
        }
        /*try {
          if (typeof(Bootstrapper.pubclean) == "function") {
            a = Bootstrapper.pubclean(a);
          }
        } catch (err) {}*/
        return a || "Element-Not-Available";
      }
    },
    kmodDate: {
      get: function() {
        var a = jQuery('meta[property="og:article:modified_time"]').attr('content') || jQuery('.timestamp').attr('title') || 'Element-Not-Available';
        try {
          if (typeof(Bootstrapper.pubclean) == "function") {
            a = Bootstrapper.pubclean(a);
          }
        } catch (err) {}
        return a || "Element-Not-Available";
      }
    },
    kkeywords: {
      get: function() {
        return (typeof(window.HRST) != "undefined" && typeof(window.HRST.article) != "undefined" ? window.HRST.article.tags.toString() : "") || jQuery('meta[name="keywords"]').attr('content') || 'Element-Not-Available';
      }
    },
    ksite: {
      get: function() {
        return jQuery('meta[name="og:site_name"]').attr('content') || location.hostname || 'Element-Not-Available';
      }
    },
    ktype: {
      get: function() {
        return (typeof(window.HRST) != "undefined" && typeof(window.HRST.article) != "undefined" ? window.HRST.article.template : "") || jQuery('meta[name="og:type"]').attr('content') || $('meta[property="og:type"]').attr('content') || (typeof(window.omni_className) != "undefined" ? window.omni_className : "") || (typeof(globaljsobject) != "undefined" ? window.globaljsobject.content_type : "") || (typeof(window.hfm) != "undefined" && typeof(window.hfm.cd) != "undefined" && typeof(window.hfm.cd.page) != "undefined" ? window.hfm.cd.page.content_type : "") || 'Element-Not-Available';
      }
    },
    kinteralSearch: {
      get: function() {
        var a = window.awOmniSearchTerms || window.abOmniSearchTerms;
        if (!a) {
          function getUrlVars() {
            var vars = [],
              hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
              hash = hashes[i].split('=');
              vars.push(hash[0]);
              vars[hash[0]] = hash[1];
            }
            return vars;
          }
          a = getUrlVars()["q"] || '';
        }
        return a || 'Element-Not-Available';
      }
    },
    ktimestamp: {
      get: function() {
        return Bootstrapper.ensFormatHearstDate(new Date());
      }
    },
    kuserAgent: {
      get: function() {
        return navigator.userAgent || 'Element-Not-Available';
      }
    },
    kgaCookie: {
      get: function() {
        return Bootstrapper.Cookies.get('__utma').match(/^\d+\.\d+\./)[0].replace(/^\d+\./g, "").replace(/\./g, "") || 'Element-Not-Available';
      }
    },
    kscCookie: {
      get: function() {
        var sviCookie = Bootstrapper.Cookies.get('s_vi');
        if (sviCookie !== '') {
          return sviCookie.match(/\|.*\[/)[0].replace(/\|/g, "").replace(/\[/g, "");
        } else {
          return 'Element-Not-Available';
        }
      }
    },
    kscCookie_fid: {
      get: function() {
        return Bootstrapper.Cookies.get('s_fid') || 'Element-Not-Available';
      }
    },
    kicrossingCookie: {
      get: function() {
        return Bootstrapper.Cookies.get('icxid') || 'Element-Not-Available';
      }
    },
    kreferral: {
      get: function() {
        var c = "";
        if (document.referrer == 'undefined' || !document.referrer) {
          c = 'Direct';
        } else {
          c = document.referrer.substring(0, 255);
        }
        return c;
      }
    },
    kuserId: {
      get: function() {
        if (window.s) {
          return window.s.prop47 || 'Element-Not-Available';
        } else {
          return 'Element-Not-Available';
        }
      }
    },
    kurlHash: {
      get: function() {
        var a = Bootstrapper.Cookies.get('icxid') + location.href + window.dHash;
        return Bootstrapper.MD5(a);
      }
    },
    kbu: {
      get: function() {
        if (typeof(Bootstrapper.BU_parse) != "undefined") {
          return Bootstrapper.BU_parse(getIXingId() || "Element-Not-Available");
        }
      }
    },
    kbrand: {
      get: function() {
        if (typeof(Bootstrapper.brand) != "undefined") {
          return Bootstrapper.brand(getIXingId() || "Element-Not-Available");
        }
      }
    },
    krefType: {
      get: function() {
        if (typeof(Bootstrapper.ref_type) != "undefined") {
          return Bootstrapper.ref_type(Bootstrapper.urlclean(document.referrer), Bootstrapper.urlclean(location.href));
        }
      }
    },
    ktimeZone: {
      get: function() {
        return (new Date().getTimezoneOffset() || 0) / 60;
      }
    },
    ktimeStamp2: {
      get: function() {
        return Date.parse(window.Bootstrapper._serverTime.replace(' ', 'T'));
      }
    }
  }
});
